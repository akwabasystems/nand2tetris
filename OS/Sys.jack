/**
 * A library that supports various program execution services.
 */
class Sys {

    /** 
     * Performs all the initializations required by the OS. 
     */
    function void init() {
        do Memory.init();
        do Math.init();
        do Screen.init();
        do Output.init();
        do Keyboard.init();
        do Main.main();
        do Sys.halt();
        return;
    }


    /** 
     * Halts the program execution. 
     */
    function void halt() {
        while (true) {
        }

        return;
    }

    /** 
     * Waits approximately duration milliseconds and returns.  
     *
     * @param duration      the duration in milliseconds
     */
    function void wait(int duration) {
        var int i;

        if (duration < 0) {
            do Sys.error(1);
        }

        while (duration > 0) {
            let i = 50;

            while (i > 0) {
                let i = i - 1;
            }

            let duration = duration - 1;
        }

        return;
    }


    /** 
     * Displays the given error code in the form "ERR<errorCode>", and halts the program's execution. 
     *
     * @param errorCode     the error code to display
     */
    function void error(int errorCode) {
        do Output.printString("ERR");
        do Output.printInt(errorCode);
        do Sys.halt();
        return;
    }
}
